---
- name: Install Kubernetes essentials on all nodes
  hosts: k8s_nodes
  become: true
  gather_facts: true
  vars:
    docker_repo_codename: "{{ ansible_lsb.codename | default('noble') }}" # noble: 24.04
    k8s_minor: v1.34
    k8s_keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    k8s_list: /etc/apt/sources.list.d/kubernetes.list
    containerd_pause_image: registry.k8s.io/pause:3.10.1
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist
    - name: Disable swap temporarily
      command: swapoff -a
      when: ansible_swaptotal_mb | default(0) > 0
    - name: Disable swap permanently
      ansible.posix.mount:
        name: none
        fstype: swap
        state: absent
    - name: Ensure kernel modules are enabled (br_netfilter, overlay)
      modprobe:
        name: "{{ item }}"
        state: present
        persistent: present
      loop:
        - br_netfilter
        - overlay
    - name: Enable iptables and forwarding via sysctl config
      sysctl:
        name: "{{ item }}"
        value: "1"
        reload: yes
        sysctl_file: /etc/sysctl.d/k8s.conf
        state: present
        sysctl_set: yes
      loop:
        - net.bridge.bridge-nf-call-ip6tables
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
    - name: Ensure keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
    - name: Convert Docker GPG key to dearmored keyring
      command: /usr/bin/gpg --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.gpg
    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch={{ (ansible_architecture == 'aarch64') | ternary('arm64', 'amd64' )}} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ docker_repo_codename }} stable
        state: present
        filename: docker
    - name: Update apt and install containerd.io
      apt:
        name: containerd.io
        state: present
        update_cache: yes
    ## cgroup
    - name: Setup containerd config directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
    - name: Generate default containerd config
      command: containerd config default
      register: containerd_config
    - name: Write containerd config.toml
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"
    - name: Set SystemdCgroup=true in containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: SystemdCgroup = false
        replace: SystemdCgroup = true
    - name: Ensure CRI sandbox_image matches kubeadm expected pause image
      replace:
        path: /etc/containerd/config.toml
        regexp: ^\s*sandbox_image\s*=\s*".*"\s*$
        replace: '    sandbox_image = "{{ containerd_pause_image }}"'
    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: true
    - name: state the kubernetes keyring file
      stat:
        path: "{{ k8s_keyring }}"
      register: k8s_keyring_stat
    - name: Download Kubernetes apt signing key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/{{ k8s_minor }}/deb/Release.key
        dest: /tmp/k8s_key.gpg
        mode: "0644"
        timeout: 30
    - name: Ensure temporary GNUPG home for dearmor
      file:
        path: /etc/apt/keyrings/gnupg
        state: directory
        mode: "0700"
        owner: root
        group: root
    - name: Dearmor Kubernetes Release.key to keyring (idempotent)
      command: |
        /usr/bin/gpg --dearmor --yes --batch --no-tty --output {{ k8s_keyring }} /tmp/k8s_key.gpg
      environment:
        GNUPGHOME: /etc/apt/keyrings/gnupg
      args:
        creates: "{{ k8s_keyring }}"
    - name: Ensure permissions on Kubernetes keyring
      file:
        path: "{{ k8s_keyring }}"
        mode: "0644"
    - name: Configure Kubernetes apt repository
      copy:
        dest: "{{ k8s_list }}"
        mode: "0644"
        content: |
          deb [signed-by={{ k8s_keyring }}] https://pkgs.k8s.io/core:/stable:/{{ k8s_minor }}/deb/ /
    - name: apt-get update for Kubernetes repo
      apt:
        update_cache: yes
    - name: Install kubelet, kubeadm, kubectl for {{ k8s_minor }}
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
    - name: Hold kube packages (no unintended upgrades)
      command: apt-mark hold kubelet kubeadm kubectl
      changed_when: false
    - name: Enable kubelet
      systemd:
        name: kubelet
        enabled: true
        state: started
